#!/bin/bash
MY_BIN="$HOME/.yui_bin"

main() {
	echo "Loading ${BASH_SOURCE[0]}"
	_setupAlias
	_setupEnv
	_setupCustomVariables
	_setupTools
}

_setupAlias() {
	#
	# Alias
	#
	alias ytop="top -r -S -stats pid,command,cpu,mem,user,time,state,rprvt,vsize,vprvt,kprvt,kshrd,purg"
	alias ls="ls -G"
	alias ll="ls -alFG"		# G=color F=show type
	alias la="ls -AG"
	PSCOLUMNS="pid,ppid,user,%cpu,%mem,rss,vsz,comm"
	alias ypscpu="CommandWithLess ps -Ar -o $PSCOLUMNS"
	alias ypsmem="CommandWithLess ps -Am -o $PSCOLUMNS"
	alias ypsid="ps -Ao pid,ppid,pgid,rgid,user,uid,tt,command"
	alias yshutdown="sudo /sbin/shutdown -h now"

	# Sar
	let SARINTERVAL=10
	let SARCOUNT="(60 * 60 * 24) / SARINTERVAL"		# A day
	DoSar() {
		TYPE=$1
		INTERVAL=$2
		COUNT=$3
		if [[ ! $INTERVAL ]]; then INTERVAL=$SARINTERVAL; fi
		if [[ ! $COUNT ]]
		then
			let COUNT="$SARCOUNT"
		fi
		sar "$TYPE $INTERVAL $COUNT"
	}
	alias saru="DoSar -u"
	alias sard="DoSar -d"
	alias sarn="DoSar \"-n DEV\""
}

_setupEnv() {
	#
	# Mac specific settings
	#
	#export TERM='xterm-color'
	#alias tmux="TERM=screen-256color-bce tmux"
	#alias tmux="tmux -2"

	# Allow forward search with Ctrl-S
	stty stop undef

	_setupPath
}

_setupPath() {
	PATH=/usr/lib:$PATH
	PATH=$HOME/local/bin:$PATH
	PATH="$TOOLS_YUI/scripts:$PATH"
	PATH="$TOOLS_YUI/scripts/Exaptive:$PATH"
	export PATH
}

_setupCustomVariables() {
	# Nothing yet
	:
}

_setupTools() {
	## Tools
	# iterm
	# shellcheck disable=SC1090,SC2046,SC2006,SC2086
	[[ -s ~/.iterm2_shell_integration.`basename $SHELL` ]] && source ~/.iterm2_shell_integration.`basename $SHELL`

	# bash-completion installed via Homebrew
	[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

	# autojump
	# shellcheck disable=SC1090
	[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && source ~/.autojump/etc/profile.d/autojump.sh

	# z
	# shellcheck disable=SC1090
	[[ -s ~/.z.sh ]] && source ~/.z.sh

	# iTerm
	# shellcheck disable=SC1090
	test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

	# Stubby
	if [[ -d /usr/local/opt/stubby ]]
	then
		# Stubby helpers
		stubby_setdns() {
			# shellcheck disable=SC2068
			sudo bash /usr/local/opt/stubby/sbin/stubby-setdns-macos.sh $@
		}
		stubby_log() {
			# shellcheck disable=SC2068
			sudo less $@ /usr/local/var/log/stubby/stubby.log
		}
		stubby_server_key() {
			local host
			local port
			host=$1
			port=${2:-853}
			certificate=$(echo "" | openssl s_client -connect "${host}:${port}" 2>/dev/null)
			if [[ ! "$certificate" ]]; then echo "No certificate for ${host}:${port}"; return; fi
			echo "$certificate" |
				openssl x509 -pubkey -noout |
				openssl pkey -pubin -outform der |
				openssl dgst -sha256 -binary |
				openssl enc -base64
		}
	fi

	## gpg
	# Need to set GPG_TTY to get password prompt for ssh
	# https://unix.stackexchange.com/questions/217737/pinentry-fails-with-gpg-agent-and-ssh
	GPG_TTY=$(tty)
	export GPG_TTY
}

main
