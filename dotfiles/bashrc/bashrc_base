#!/bin/bash
export MY_BIN="$HOME/.bin_yui"
export TOOLS_YUI="$HOME/.tools_yui"
export BASHRC_YUI="$HOME/.bashrc_yui"
export BASHRCBASE_PATH="$BASHRC_YUI/bashrc_base"

#
# Check if MAC
# 
export IS_MAC=`[[ -z $(uname | grep Darwin) ]]; echo $?`


# Auto completion with git
if [[ -f "${MY_BIN}/git-completion.bash" ]]
then
	source "${MY_BIN}/git-completion.bash"
fi

#
# PS1
#
# \s = Shell
# \h = hostname
# \H = Full hostname
# \u = Current user
# \w = Current directory from the user's home directory
# \W = Current directory
export PS1='\u@\h:\w [j=\j]$ '


#
# Functions
#

PrintSystemInfo() {
	echo "Bash:$SHELL $BASH_VERSION"
	echo "Date:"`date`
	echo "Kernel:"`uname -a`
	echo "User:"`whoami`
	echo "Host:"`hostname`
}
# Bug: printing here caused problems when uploading with scp.
#PrintSystemInfo

RenameFiles() {
	local delim="/"

	#
	# Input
	#
	local searchdir=$1
	local search=$2
	local replace=$3

	# Validate
	if [[ ! -d $searchdir ]]; then echo "No such directory $searchdir"; fi
	if [[ ! $search ]]; then echo "Missing search term"; return; fi
	if [[ ! $replace ]]; then echo "Missing search term"; return; fi


	#
	# Main
	#
	local srcfiles=$(eval "find \"$searchdir\" | sed -n -e '/$search/p'")
	srcfiles=(${srcfiles// /})
	local destfiles=$(eval "find \"$searchdir\" | sed -n -e 's/$search/$replace/p'")
	destfiles=(${destfiles// /})

	if [[ ${#srcfiles} == 0 ]]; then echo "No files found."; return; fi

	# Step 1) Confirm
	for i in ${!srcfiles[@]}
	do
		echo "${srcfiles[$i]}-> ${destfiles[$i]}"
	done
	echo "Rename? (y/n)"
	read check
	if [[ $check != "y" ]]; then echo "Stop"; return; fi

	# Step 2) Perform
	for i in ${!srcfiles[@]}
	do
		mv "${srcfiles[$i]}" "${destfiles[$i]}"
	done
}

#
# Aliases
#
alias pu="pushd"
alias po="popd"
alias ll="ls -alF"
alias la="ls -A"
alias rm="rm -i"
alias cp="cp -i"
alias mv="mv -i"
alias less="less -N"
# To enable <C-S> to work in vim.
alias vim="stty stop '' -ixoff; vim"


# 
alias bashrcReload="source ~/.bashrc"
alias bashrcEdit="vim $BASHRCBASE_PATH"


#
# Path
#
# Backup
if [[ ! $PATH_BAK ]]; then PATH_BAK=$PATH; fi
PATH=$PATH_BAK

PATH=/usr/sbin:$PATH
PATH="$MY_BIN:$PATH"
PATH=$HOME/.node_modules/bin:$PATH:
export PATH_BAK
export PATH


#
# Custom bashrc
# Do this last. Otherwise, may get overwritten by default.
#
if [[ $IS_MAC == 1 ]]
then
	source "$BASHRC_YUI/bashrc_mac"
fi

#########################################################
#					OLD STUFF							#
#########################################################

#
# pkg-config
#
#export PKG_CONFIG="/opt/pkgconfig/bin/pkg-config"
#export PKG_CONFIG_PATH="/Library/Frameworks//Mono.framework/Versions/3.2.7/lib/pkgconfig"

